<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>qube.qai</groupId>
    <artifactId>qai</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>

    <name>qube.qai</name>

    <properties>
        <lucene.version>5.3.1</lucene.version>
        <tika.version>1.10</tika.version>
        <!-- 3.6.3 seems not to work with map-stores, therefore stay with the 3.5.4 -->
        <hazelcast.version>3.5.4</hazelcast.version>
        <guice.version>4.0</guice.version>
        <guice-conf.version>1.2.0</guice-conf.version>
        <hsqldb.version>2.3.4</hsqldb.version>
        <hibernate.version>4.3.6.Final</hibernate.version>
        <hibernate-annotations.version>3.5.6-Final</hibernate-annotations.version>
        <hibernate-jpa.version>1.0.0.Final</hibernate-jpa.version>
        <!--<javax.persistence.version>1.0.2</javax.persistence.version>-->
        <jdk.version>1.8</jdk.version>
        <ojalgo.version>39.0</ojalgo.version>
        <bliki.version>3.0.19</bliki.version>
        <encog.version>3.3.0</encog.version>
        <opennlp.version>1.6.0</opennlp.version>
        <jparsec.version>2.2.1</jparsec.version>
        <xstream.version>1.4.9</xstream.version>
        <milyn-smooks.version>1.6</milyn-smooks.version>
        <jsoup.version>1.9.2</jsoup.version>
        <apache-commons-lang3.version>3.4</apache-commons-lang3.version>
        <apache-commons-compress.version>1.11</apache-commons-compress.version>
    </properties>

    <dependencies>
        <!-- GRPH graph-library- added directly as a jar,
        because maven doesn't download the thing out of some reason -->
        <dependency>
            <groupId>grph</groupId>
            <artifactId>grph.all</artifactId>
            <version>1.6.29</version>
        </dependency>

		<dependency>
            <groupId>qube.samsroad</groupId>
            <artifactId>samsroad</artifactId>
            <version>1.0</version>
        </dependency>
		
		<!-- bliki for wiki-parsing -->
        <dependency>
            <groupId>info.bliki.wiki</groupId>
            <artifactId>bliki-core</artifactId>
            <version>${bliki.version}</version>
        </dependency>

        <!-- for converting wiki-entries to pdf-format -->
		<dependency>
            <groupId>info.bliki.pdf</groupId>
            <artifactId>bliki-pdf</artifactId>
            <version>${bliki.version}</version>
        </dependency>

        <!-- Encog for neural-network implementation -->
        <dependency>
            <groupId>org.encog</groupId>
            <artifactId>encog-core</artifactId>
            <version>${encog.version}</version>
        </dependency>

        <!-- ojalgo for matrix things -->
        <dependency>
            <groupId>org.ojalgo</groupId>
            <artifactId>ojalgo</artifactId>
            <version>${ojalgo.version}</version>
        </dependency>

         <!-- Tika does parsing and Lucene does search and indexing -->
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-parsers</artifactId>
            <version>${tika.version}</version>
        </dependency>

        <!-- Lucene itself -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>${lucene.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
            <version>${lucene.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
            <version>${lucene.version}</version>
        </dependency>

        <!-- apache open-nlp -->
        <dependency>
            <groupId>org.apache.opennlp</groupId>
            <artifactId>opennlp-tools</artifactId>
            <version>${opennlp.version}</version>
        </dependency>

        <!-- Guice is pretty important after all -->
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>${guice.version}</version>
        </dependency>

        <!-- Guice-persist for JPA integration -->
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-persist</artifactId>
            <version>${guice.version}</version>
        </dependency>

        <!-- Guice-config for using external configurations -->
        <dependency>
            <groupId>net.jmob</groupId>
            <artifactId>guice.conf</artifactId>
            <version>${guice-conf.version}</version>
        </dependency>

        <!-- Hazelcast for distributed computing -->
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-all</artifactId>
            <version>${hazelcast.version}</version>
        </dependency>

        <!-- HsqlDB for the map-stores -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>${hsqldb.version}</version>
        </dependency>

        <!-- a really cool parser-framework.
        forget about parser generators, just program the parser as if it were a BNF -->
        <dependency>
            <groupId>org.jparsec</groupId>
            <artifactId>jparsec</artifactId>
            <version>${jparsec.version}</version>
        </dependency>

        <!--<dependency>-->
            <!--<groupId>com.blazegraph</groupId>-->
            <!--<artifactId>bigdata-jar</artifactId>-->
            <!--<version>2.1.0</version>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-core</artifactId>
            <version>3.1.0</version>
        </dependency>

        <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>apache-jena-libs</artifactId>
            <version>3.1.0</version>
            <type>pom</type>
        </dependency>
        <!-- -->
        <dependency>
            <groupId>org.openrdf.sesame</groupId>
            <artifactId>sesame-rio-turtle</artifactId>
            <version>4.1.2</version>
        </dependency>

        <!-- smooks seems to be a very cool xml-transformer framework
        in use for transforming the huge xml-files which come with the wikipedia and wiktionary -->
        <dependency>
            <groupId>org.milyn</groupId>
            <artifactId>milyn-smooks-all</artifactId>
            <version>${milyn-smooks.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.persistence</groupId>
                    <artifactId>persistence-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- jSoup for html-parsing -->
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${jsoup.version}</version>
        </dependency>

        <!-- jaxpb just doesn't cut it, so we serialize to xml with xstream-->
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>${xstream.version}</version>
        </dependency>

        <!-- especially string and compression utilities -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache-commons-lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>${apache-commons-compress.version}</version>
        </dependency>

        <!-- hibernate -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <!--<dependency>-->
            <!--<groupId>org.hibernate.javax.persistence</groupId>-->
            <!--<artifactId>hibernate-jpa-2.1-api</artifactId>-->
            <!--<version>${hibernate-jpa.version}</version>-->
        <!--</dependency>-->

        <!-- UUID-generator -->
        <dependency>
            <groupId>com.fasterxml.uuid</groupId>
            <artifactId>java-uuid-generator</artifactId>
            <version>3.1.3</version>
        </dependency>

        <!-- slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>1.7.13</version>
        </dependency>

        <!-- joda-time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.9.1</version>
        </dependency>

        <!-- jUnit for the tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <!--<repository>-->
        <!--<id>central</id>-->
        <!--<url>http://192.168.1.4:8081/artifactory/libs-release-local</url>-->
        <!--<snapshots>-->
        <!--<enabled>false</enabled>-->
        <!--</snapshots>-->
        <!--</repository>-->
        <!--<repository>-->
        <!--<id>snapshots</id>-->
        <!--<url>http://192.168.1.4:8081/artifactory/libs-snapshot-local</url>-->
        <!--<releases>-->
        <!--<enabled>false</enabled>-->
        <!--</releases>-->
        <!--</repository>-->
        <!--<repository>-->
        <!--<id>release</id>-->
        <!--<url>http://192.168.1.4:8081/artifactory/ext-release-local</url>-->
        <!--<releases>-->
        <!--<enabled>false</enabled>-->
        <!--</releases>-->
        <!--</repository>-->
        <!--<repository>-->
        <!--<id>local-lib</id>-->
        <!--<url>http://192.168.1.4:8081/artifactory/libs-release-local</url>-->
        <!--<releases>-->
        <!--<enabled>false</enabled>-->
        <!--</releases>-->
        <!--</repository>-->
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <url>http://192.168.1.4:8081/artifactory/plugins-release</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
        <pluginRepository>
            <id>snapshots</id>
            <url>http://192.168.1.4:8081/artifactory/plugins-snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </pluginRepository>
    </pluginRepositories>

</project>
