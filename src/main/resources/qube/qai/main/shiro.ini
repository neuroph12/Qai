# =============================================================================
# Shiro configuration
#
# We want to use the database described below for security
# =============================================================================

# -----------------------------------------------------------------------------
# Users and their (optional) assigned roles
# username = password, role1, role2, ..., roleN
# -----------------------------------------------------------------------------
[users]
root = secret, admin
guest = guest, guest
presidentskroob = 12345, president
darkhelmet = ludicrousspeed, darklord, schwartz
lonestarr = vespa, goodguy, schwartz

# -----------------------------------------------------------------------------
# Roles with assigned permissions
# roleName = perm1, perm2, ..., permN
# -----------------------------------------------------------------------------
[roles]
admin = *
schwartz = lightsaber:*
goodguy = winnebago:drive:eagle5

# Own Realm
#jdbcRealm = qube.qai.security.QaiRealm

# User Query
#jdbcRealm.authenticationQuery = "SELECT password FROM User where username = ?"

# permissions
#jdbcRealm.permissionsLookupEnabled = true
#jdbcRealm.userRolesQuery = SELECT name FROM Role WHERE userId = ?
#jdbcRealm.permissionsQuery = SELECT role FROM Role where userId = ?

# Connection
#ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
#ds.serverName = 192.168.1.7:3306
#ds.user = sa
#ds.password = sa
#ds.databaseName = test_users
#jdbcRealm.dataSource=$ds

#authc.usernameParam = username
#authc.passwordParam = password
#authc.failureKeyAttribute = shiroLoginFailure

# Use Built-in Chache Manager
#builtInCacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
#securityManager.cacheManager = $builtInCacheManager

#securityManager.realms = $jdbcRealm